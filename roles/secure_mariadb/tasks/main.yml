- name: Check if MariaDB is already configured
  stat:
    path: "{{ ansible_env.HOME }}/.mariadb_configured"
  register: mariadb_configured

- name: Set fact for MariaDB configuration status
  set_fact:
    is_mariadb_configured: "{{ mariadb_configured.stat.exists }}"

- name: Install PyMySQL
  pip:
    name: pymysql
  become: yes

- name: Install MariaDB Server and Client
  apt:
    name:
      - mariadb-server
      - mariadb-client
    state: present
    update_cache: yes
  become: yes

- name: Secure MariaDB installation
  block:
    - name: Set the root password for MariaDB
      mysql_user:
        name: root
        host_all: yes
        password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"
        check_implicit_admin: yes
      become: yes

    - name: Remove anonymous MariaDB users
      mysql_user:
        user: ""
        host_all: yes
        state: absent
      become: yes

    - name: Disallow root login remotely
      mysql_user:
        name: root
        host: '%'
        state: absent
      become: yes

    - name: Remove the MariaDB test database
      mysql_db:
        name: test
        state: absent
      become: yes

    - name: Flush privileges
      mysql_user:
        name: root
        host_all: yes
        password: "{{ mariadb_root_password }}"
        priv: "*.*:RELOAD"
      become: yes

    - name: Ensure the MariaDB server is started
      service:
        name: mariadb
        state: started
        enabled: yes
      become: yes

    - name: Copy my.cnf configuration file
      template:
        src: my.cnf.j2
        dest: /etc/mysql/my.cnf
        owner: root
        group: root
        mode: '0644'
      notify:
        - restart mariadb

    - name: Create hidden secret file to indicate MariaDB is configured
      file:
        path: "{{ ansible_env.HOME }}/.mariadb_configured"
        state: touch
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0600'
  when: not is_mariadb_configured | default(false)
