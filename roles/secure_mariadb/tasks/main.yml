- name: Check if MariaDB is already configured
  stat:
    path: "{{ ansible_env.HOME }}/.mariadb_configured"
  register: mariadb_configured

- name: Set fact for MariaDB configuration status
  set_fact:
    is_mariadb_configured: "{{ mariadb_configured.stat.exists }}"

- name: Install PyMySQL
  pip:
    name: pymysql
  become: yes

- name: Install MariaDB Server and Client
  apt:
    name:
      - mariadb-server
      - mariadb-client
    state: present
    update_cache: yes
  become: yes

- name: Secure MariaDB installation
  block:
    - name: Set the root password
      shell: |
        mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}'; FLUSH PRIVILEGES;"
      become: yes
      no_log: true
      when: not is_mariadb_configured | default(false)

    - name: Remove anonymous users
      shell: |
        mysql -u root -p"{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}" -e "DELETE FROM mysql.user WHERE User='';"
      become: yes
      no_log: true

    - name: Disallow root login remotely
      shell: |
        mysql -u root -p"{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}" -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
      become: yes
      no_log: true

    - name: Remove test database and access to it
      shell: |
        mysql -u root -p"{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}" -e "DROP DATABASE IF EXISTS test;"
        mysql -u root -p"{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}" -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
      become: yes
      no_log: true

    - name: Reload privilege tables
      shell: |
        mysql -u root -p"{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}" -e "FLUSH PRIVILEGES;"
      become: yes
      no_log: true

    - name: Ensure the MariaDB server is started
      service:
        name: mariadb
        state: started
        enabled: yes
      become: yes

    - name: Copy my.cnf configuration file
      template:
        src: my.cnf.j2
        dest: /etc/mysql/my.cnf
        owner: root
        group: root
        mode: '0644'
      notify: restart mariadb
      become: yes

    - name: Restart MariaDB service
      become: yes
      shell: systemctl restart mariadb

    - name: Create hidden secret file to indicate MariaDB is configured
      file:
        path: "{{ ansible_env.HOME }}/.mariadb_configured"
        state: touch
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0600'
      become: yes
  when: not is_mariadb_configured | default(false)

